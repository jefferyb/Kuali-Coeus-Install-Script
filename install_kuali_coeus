#!/bin/bash

#DEFINE
LINUX_DISTRIBUTATION=$(grep -Eo "(Debian|Ubuntu|RedHat|CentOS)" /etc/issue)
DISTRIBUTATION_VERSION=$(cat /etc/*release | grep VERSION_ID | cut -c 13)

# TOMCAT RELATED
TOMCAT_LINK="http://apache.mirrors.lucidnetworks.net/tomcat/tomcat-8/v8.0.21/bin/apache-tomcat-8.0.21.tar.gz"
TOMCAT_FILE="apache-tomcat-8.0.21.tar.gz"
TOMCAT_LOCATION="/opt/apache-tomcat/tomcat8"

# MySQL Connector Java
MYSQL_CONNECTOR_LINK="http://mirror.cogentco.com/pub/mysql/Connector-J/mysql-connector-java-5.1.34.zip"
MYSQL_CONNECTOR_ZIP_FILE="mysql-connector-java-5.1.34.zip"
MYSQL_CONNECTOR_FILE="mysql-connector-java-5.1.34/mysql-connector-java-5.1.34-bin.jar"

# Kuali Release File
KC_RELEASE_LINK="http://downloads.kc.kuali.org/6.0/kc-release-6_0.zip"
KC_RELEASE_FILE="kc-release-6_0.zip"
KC_SOURCE_LOCATION="/opt/kuali/source/6.0"
KC_CONFIG_XML_LOC="/opt/kuali/main/dev"

# CLEAN-UP
CLEANUP_LOCATIONS="/opt/apache-tomcat /opt/kuali"

clear

echo "**********************************************************************************************"
echo "*"
echo "*	MySQL Server Info and other "
echo "* P.S: If you haven't set up MySQL, the password you enter will "
echo "* be used during the MySQL Setup as the root password"
echo "*"
echo "**********************************************************************************************" 
echo
echo
echo "Enter MySQL username and press [ENTER]: root "
mysql_username=root
echo -n "Enter MySQL root password and press [ENTER]: "
read mysql_password
echo
echo -n "Enter email address to send the ERRORS from the Database script and press [ENTER]: "
read email_address

clear

echo "**********************************************************************"
echo "*"
echo "*	Making sure MySQL is installed "
echo "*"
echo "**********************************************************************" 
echo
echo

if [ -f /etc/debian_version ]; then
	dpkg -l | grep -i mysql-server | head -1 | if [[ "$(cut -d ' ' -f 1)" != "ii" ]]; then
		echo
		echo "It looks like MySQL is not installed on your $LINUX_DISTRIBUTATION"
		echo "Make sure that MySQL is installed & configured and have the root password"
		echo
		apt-get install -y mysql-server
	fi

	echo
	echo "Ok, it looks like MySQL Server (mysql-server) is installed on your $LINUX_DISTRIBUTATION..."
	echo

elif [ -f /etc/redhat-release ]; then
	if [[ $DISTRIBUTATION_VERSION == 7 ]]; then
		if [[ "$(rpm -q mariadb-server)" == "package mariadb-server is not installed" ]]; then
			echo
			echo "It looks like MySQL Server (mariadb-server) is not installed on your $LINUX_DISTRIBUTATION"
			echo "Installing/setting up MySQL Server (mariadb-server) "
			echo "===================================================="
			yum install -y mariadb-server mariadb
			systemctl start mariadb
			systemctl enable mariadb
			/usr/bin/mysqladmin -u root password ${mysql_password}
			/usr/bin/mysqladmin -u root -h `hostname` password ${mysql_password}
		fi
	else
		if [[ "$(rpm -q mysql-server)" == "package mysql-server is not installed" ]]; then
			echo "It looks like MySQL Server (mysql-server) is not installed on your $LINUX_DISTRIBUTATION"
			echo "Installing/setting up MySQL Server (mysql-server) "
			echo "=================================================="
			yum install -y mysql-server mysql
			chkconfig --levels 235 mysqld on
			service mysqld start
			/usr/bin/mysqladmin -u root password ${mysql_password}
			/usr/bin/mysqladmin -u root -h `hostname` password ${mysql_password}
		fi
	fi

	echo
	echo "Ok, it looks like MySQL Server is installed on your $LINUX_DISTRIBUTATION..."
	echo
fi

if [ -f /etc/redhat-release ]; then
	yum install -y net-tools
	if [[ $DISTRIBUTATION_VERSION == 7 ]]; then
		systemctl stop firewalld
	else
		service iptables stop
	fi
fi

InstallHomeFolder=`pwd`

### GETTING THE IP ADDRESS
ip_address=`ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1  -d'/'`

#if [[ $DISTRIBUTATION_VERSION == 7 ]]; then
#	ip_address=`ifconfig eth0 2>/dev/null|awk '/inet / {print $2}'|sed 's/addr://'`
#else
#	ip_address=`ifconfig eth0 2>/dev/null|awk '/inet addr:/ {print $2}'|sed 's/addr://'`
#fi

### DOING SOME CLEAN-UP
rm -fr $CLEANUP_LOCATIONS
mysqladmin -u username -ppassword drop --force kuali

### SETTING UP TOMCAT
if [ -f /etc/debian_version ]; then
	apt-get install -y wget unzip openjdk-7-jdk mailutils
elif [ -f /etc/redhat-release ]; then
	yum install -y wget unzip java-1.7.0-openjdk mailx
fi

cd /opt
if [ -f $TOMCAT_FILE ]; then
        echo "$TOMCAT_FILE exist"
else
	wget $TOMCAT_LINK
fi

mkdir -p $TOMCAT_LOCATION
tar --strip-components=1 -zxvf $TOMCAT_FILE -C $TOMCAT_LOCATION

if [ -f $MYSQL_CONNECTOR_ZIP_FILE ]; then
        echo "$MYSQL_CONNECTOR_ZIP_FILE exist"
else
	wget $MYSQL_CONNECTOR_LINK
fi

unzip -j $MYSQL_CONNECTOR_ZIP_FILE $MYSQL_CONNECTOR_FILE -d $TOMCAT_LOCATION/lib
rm -fr mysql-connector-java* apache-tomcat-*.tar.gz
cp $InstallHomeFolder/setenv.sh $TOMCAT_LOCATION/bin
cd $TOMCAT_LOCATION/bin
chmod +x *.sh

### DOWNLOAD KUALI COEUS 6.0

cd /opt
if [ -f $KC_RELEASE_FILE ]; then
	echo "$KC_RELEASE_FILE exist"
else
	wget $KC_RELEASE_LINK
fi

mkdir -p $KC_SOURCE_LOCATION
unzip $KC_RELEASE_FILE -d $KC_SOURCE_LOCATION
rm -fr $KC_RELEASE_FILE

### SETUP MySQL
if [ -f /etc/debian_version ]; then
	cp $InstallHomeFolder/my.cnf.Ubuntu /etc/mysql/my.cnf
	service mysql restart
elif [[ $DISTRIBUTATION_VERSION == 7 ]]; then
	cp $InstallHomeFolder/my.cnf.CentOS_7_RedHat /etc/my.cnf
	systemctl restart mariadb
elif [ -f /etc/redhat-release ]; then
	cp $InstallHomeFolder/my.cnf.CentOS_RedHat /etc/my.cnf
	service mysqld restart
fi

cd $InstallHomeFolder
clear
echo
echo
echo "This may take a few minutes... Running the Kuali Coeus Database Scripts"
mysql -u ${mysql_username} -p${mysql_password} < configure_mysql.sql > mysql.out
rm -fr $KC_SOURCE_LOCATION/db_scripts/main/LOGS
cp J_KC_Install.sh $KC_SOURCE_LOCATION/db_scripts/main/

cd $KC_SOURCE_LOCATION/db_scripts/main/
chmod 0777 *.sh
./J_KC_Install.sh
cp $InstallHomeFolder/get_mysql_errors $KC_SOURCE_LOCATION/db_scripts/main/LOGS/
cd $KC_SOURCE_LOCATION/db_scripts/main/LOGS
./get_mysql_errors

grep ERROR $KC_SOURCE_LOCATION/db_scripts/main/LOGS/UPGRADE_ERRORS*
if [ $? -eq 0 ]; then
	echo " Errors were FOUND "
	mail -s "Your Database Setup has been completed WITH errors" $email_address < UPGRADE_ERRORS*
else
	echo " Errors NOT Found"
	mail -s "Your Database Setup has been completed WITHOUT errors" $email_address < UPGRADE_ERRORS*
fi
                  
### Kill any current running tomcat before starting a new one...
for i in $( ps -ef | grep -v "grep" | grep "tomcat" | awk '{print $2}' ); do
	kill -9 $i
done

### SETTING UP THE KC APPLICATION
mkdir -p $KC_CONFIG_XML_LOC
cp $InstallHomeFolder/kc-config.xml $KC_CONFIG_XML_LOC/kc-config.xml
sed -i "s/127.0.0.1/$ip_address/" $KC_CONFIG_XML_LOC/kc-config.xml

rm -fr $TOMCAT_LOCATION/webapps/kc-*
cp -f $KC_SOURCE_LOCATION/binary/kc-ptd.war $TOMCAT_LOCATION/webapps/kc-dev.war
cd $TOMCAT_LOCATION/bin
./startup.sh

tailf $TOMCAT_LOCATION/logs/catalina.out &
   regex="initialization completed in"
      tailf $TOMCAT_LOCATION/logs/catalina.out | while read line; do
	if [[ $line =~ $regex ]]; then
		pkill -9 -P $$ tailf
	fi
   done

echo
echo
echo
echo
echo
echo
echo
echo "If there were no errors, you should be able to access Kuali Coeus at: "
echo "**********************************************************************"
echo "*"
echo "*	http://"${ip_address}":8080/kc-dev       | Login as 'admin' "
echo "*"
echo "**********************************************************************" 
echo "PS: remember to turn off or configure your firewall on the server... ( Your firewall should be off, but make sure )"
echo "And you should ingest Rice-KEW.zip & Full-KC-KEW.zip that you can find at /opt/kuali_coeus/db_scripts/main/ "
echo
echo
echo
